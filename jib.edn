{;; required apiVersion and kind, for compatibility over versions of the cli
 :apiVersion "jib/v1alpha1"
 :kind       "BuildFile"

 ;; full base image specification with detail for manifest lists or multiple architectures
 :from
 {:image "eclipse-temurin:11-jre"

  ;; set platforms for multi architecture builds, defaults to `linux/amd64`
  :platforms
  [{:architecture "arm64" :os "linux"}
   {:architecture "amd64" :os "linux"}]}

 ;; creation time sets the creation time of the container only
 ;; can be: millis since epoch (ex: 1000) or an ISO 8601 creation time (ex: 2020-06-08T14:54:36+00:00)
 :creationTime #now nil
 :format       "Docker" ;; Docker or OCI

 ;; container environment variables
 ;; :environment {:KEY1 "v1" :KEY2 "v2"}

 ;; container labels
 ;; :labels      {:label1 "l1" :label2 "l2"}

 ;; specify volume mount points
 ;; :volumes     ["/volume1" "/volume2"]

 ;; specify exposed ports metadata (port-number/protocol)
 :exposedPorts ["3000"] ;; default protocol is tcp

 ;; the user to run the container (does not affect file permissions)
 ;; user: "customUser"

 :workingDirectory "/app"

 ;; :cmd           ["java" "-jar" "ring-sink.jar"]
 :entrypoint ["java" "-jar" "ring-sink.jar"]

 ;; file layers of the container

 #_#_
 :layers
 {:properties                       ;; file properties applied to all layers
  {:filePermissions      "123"      ;; octal file permissions, default is 644
   :directoryPermissions "123"      ;; octal directory permissions, default is 755
   :user                 "2"        ;; default user is 0
   :group                "4"        ;; default group is 0
   :timestamp            "1232"}    ;; timestamp can be millis since epoch or ISO 8601 format, default is "Epoch + 1 second"
  :entries
  [{:name "scripts"                 ;; first layer
    :properties                     ;; file properties applied to only this layer
    {:filePermissions "123"}        ;; see above for full list of properties...
    :files                          ;; a list of copy directives constitute a single layer
    [{:src  "project/run.sh"        ;; a simple copy directive (inherits layer level file properties)
      :dest "/home/run.sh"}         ;; all 'dest' specifications must be absolute paths on the container
     {:src        "scripts"         ;; a second copy directive in the same layer
      :dest       "/home/scripts"
      :excludes   ["**/exclude.me" "**/*.ignore"]  ;; exclude all files matching these patterns
      :includes   ["**/include.me"]                ;; include only files matching these patterns
      :properties {:filePermissions "123"}}]}      ;; file properties applied to only this copy directive
   {:name  "images"                 ;; second layer, inherits file properties from global
    :files [{:src "images"}
            {:dest "/images"}]}]}


 :layers
 {:properties
  {:timestamp #now nil}
  :entries
  [{:name "app"
    :files
    [{:src #app-jar ["target" "ring-sink.*"]
      :dest "/app/ring-sink.jar"}]}]}}
